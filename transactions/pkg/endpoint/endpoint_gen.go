// THIS FILE IS AUTO GENERATED BY GK-CLI DO NOT EDIT!!
package endpoint

import (
	endpoint "github.com/go-kit/kit/endpoint"
	service "golangmicroservices/transactions/pkg/service"
)

// Endpoints collects all of the endpoints that compose a profile service. It's
// meant to be used as a helper struct, to collect all of the endpoints into a
// single parameter.
type Endpoints struct {
	CreateEndpoint endpoint.Endpoint
	AcceptEndpoint endpoint.Endpoint
	RejectEndpoint endpoint.Endpoint
	GetAllEndpoint endpoint.Endpoint
}

// New returns a Endpoints struct that wraps the provided service, and wires in all of the
// expected endpoint middlewares
func New(s service.TransactionsService, mdw map[string][]endpoint.Middleware) Endpoints {
	eps := Endpoints{
		AcceptEndpoint: MakeAcceptEndpoint(s),
		CreateEndpoint: MakeCreateEndpoint(s),
		GetAllEndpoint: MakeGetAllEndpoint(s),
		RejectEndpoint: MakeRejectEndpoint(s),
	}
	for _, m := range mdw["Create"] {
		eps.CreateEndpoint = m(eps.CreateEndpoint)
	}
	for _, m := range mdw["Accept"] {
		eps.AcceptEndpoint = m(eps.AcceptEndpoint)
	}
	for _, m := range mdw["Reject"] {
		eps.RejectEndpoint = m(eps.RejectEndpoint)
	}
	for _, m := range mdw["GetAll"] {
		eps.GetAllEndpoint = m(eps.GetAllEndpoint)
	}
	return eps
}
