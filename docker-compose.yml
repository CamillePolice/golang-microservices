version: "3"
services:
  auths:
    build:
      context: .
      dockerfile: auths/Dockerfile
    restart: always
    volumes:
      - '.:/go/src/golangmicroservices'
    container_name: auths
    ports:
      - "8084:8084"
    environment:
      ACCESS_SECRET: ${ACCESS_SECRET}
      REFRESH_SECRET: ${REFRESH_SECRET}
    networks:
      - account-network
      - db-network
      - ads-network
      - transactions-network

  accounts:
    build:
      context: .
      dockerfile: accounts/Dockerfile
    restart: always
    volumes:
      - .:/go/src/golangmicroservices
    container_name: accounts
    ports:
      - "8081:8081"
    environment:
      ACCESS_SECRET: ${ACCESS_SECRET}
      REFRESH_SECRET: ${REFRESH_SECRET}
    networks:
      - account-network
      - db-network
      - ads-network
      - transactions-network
    links:
      ##allows us to reach the auths microservice from account microservice
      - "auths"
  ads:
    build:
      context: .
      dockerfile: ads/Dockerfile
    restart: always
    volumes:
      - .:/go/src/golangmicroservices
    container_name: ads
    ports:
      - "8082:8082"
    networks:
      - db-network
      - ads-network
    links:
      ##allows us to reach the auth microservice from ads microservice
      - "auths"
  transactions:
    build:
      context: .
      dockerfile: transactions/Dockerfile
    restart: always
    volumes:
      - .:/go/src/golangmicroservices
    container_name: transactions
    ports:
      - "8083:8083"
    networks:
      - db-network
      - transactions-network
    links:
      ##allows us to reach the auth microservice from transactions microservice
      - "auths"

  mongodb:
    image: mongo:4.2
    container_name: mongodb
    environment:
      - MONGO_DATA_DIR=/data/db
      - MONGO_LOG_DIR=/dev/null
    ports:
      - 27017:27017
    networks:
      - db-network

networks:
  account-network:
  db-network:
  ads-network:
  transactions-network:
  auth-network:
